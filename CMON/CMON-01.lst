                    0001  ;-------------------
                    0002  ; CMON - CRAIG'S MON
                    0003  ;-------------------
                    0004  ;
                    0005  ; A CUT DOWN VERSION OF THE SOUTHERN CROSS MONITOR TO FIT 
                    0006  ; IN THE 2K EPROM OF THE UNMODIFIED TALKING ELECTRONICS TEC-1
                    0007  ;
                    0008  ; WRITTEN BY CRAIG R. S. JONES
                    0009  ; MELBOURNE, AUSTRALIA.
                    0010  ;
                    0011  ; VERSION : 1
                    0012  ;
                    0013  ; THE EMPHASIS HERE IS TO GET A SERIAL PORT GOING ON THE TEC-1 TO ALLOW FOR INTEL HEX DOWNLOAD
                    0014  ; VIA THE BIT BANGED SERIAL.
                    0015  ; IF A DAT BOARD OR 74HC74 IS WIRED IN FOR SINGLE STEPPING THE MONITOR 
                    0016  ; WILL PROVIDE SIMILAR REGISTER VIEWING TO JMON.
                    0017  ; THE SOUTHERN CROSS USER MANUAL PROVIDES FURTHER INFORMATION.
                    0018  ;
                    0019  ; YOU NEED:
                    0020  ; A CRYSTAL OSCILLATOR - THE BAUD RATE CONSTANTS FOR THE BIT BANGED SERIAL ARE
                    0021  ; SET-UP FOR A 4MHZ OSCILLATOR.
                    0022  ; A TRI-STATE BUFFER WIRED INTO BIT 7 OF THE KEYBOARD PORT FOR SERIAL INPUT
                    0023  ;
                    0024  ; SERIAL CONNECTIONS:
                    0025  ; BIT 7 OF THE KEYBOARD PORT IS THE SERIAL INPUT
                    0026  ; BIT 6 OF THE DISPLAY SCAN LATCH IS THE SERIAL OUTPUT
                    0027  ;
                    0028  ; IF TEC-1 IS DEFINED:
                    0029  ;
                    0030  ; USE THE TEC I/O PORTS
                    0031  ; MOVES THE RAM LOCATIONS TO TOP OF 2K RAM @ 0800H-0FFFH
                    0032  ; CHANGES THE 7 SEGMENT DISPLAY CODES
                    0033  ; CHANGES THE ORDER AND FUNCTION OF THE ADDITIONAL KEYS
                    0034  ; USES BIT 6 OF THE KEYBOARD PORT FOR THE DA CONNECTION TO THE 74C923
                    0035  ; COMPLETELY IGNORES THE SHIFT BUTTON
                    0036  ;
                    0037  #DEFINE TEC-1   ;RUNNING ON A TEC-1
                    0038  
                    0039  #IFDEF TEC-1 
                    0040  ; IF YOUR HARDWARE INVERTS DA FROM THE KEYBOARD ENCODER            
                    0041  #DEFINE DA_ACTIVE_LOW 
                    0042  #ENDIF
                    0043  ;-----------------
                    0044  ; SYSTEM VARIABLES
                    0045  ;-----------------
                    0046  ;
                    0047  ; RAM AND SYSTEM POINTER
                    0048  ;
                    0049  #IFDEF TEC-1
0800:               0050  RAMSRT      EQU 0800H           ;START OF USER RAM
0FFF:               0051  RAMEND      EQU 0FFFH           ;END OF USER RAM
0F00:               0052  SYSTEM      EQU 0F00H           ;SYSTEM POINTER
                    0053  #ELSE
                    0054  RAMSRT      EQU 2000H           ;START OF USER RAM
                    0055  RAMEND      EQU 3BFFH           ;END OF USER RAM
                    0056  SYSTEM      EQU 3F00H           ;SYSTEM POINTER
                    0057  #ENDIF
                    0058  ;
                    0059  ; BAUD RATE CONSTANTS
                    0060  ;
0220:               0061  B300        EQU 0220H           ;300 BAUD
0080:               0062  B1200       EQU 0080H           ;1200 BAUD
003F:               0063  B2400       EQU 003FH           ;2400 BAUD
001B:               0064  B4800       EQU 001BH           ;4800 BAUD
000B:               0065  B9600       EQU 000BH           ;9600 BAUD
                    0066  ;
                    0067  ; I/O PORT ADDRESS
                    0068  ;
                    0069  #IFDEF TEC-1
0000:               0070  KEYBUF      EQU 00H             ;MM74C923N KEYBOARD ENCODER
0001:               0071  SCAN        EQU 01H             ;DISPLAY SCAN LATCH
0002:               0072  DISPLY      EQU 02H             ;DISPLAY LATCH
0007:               0073  IO7         EQU 07H             ;ENABLE/DISABLE SINGLE STEPPER (IF INSTALLED)
                    0074  #ELSE
                    0075  IO0         EQU 80H             ;IO PORT 0
                    0076  IO1         EQU 81H             ;IO PORT 1
                    0077  IO2         EQU 82H             ;IO PORT 2
                    0078  IO3         EQU 83H             ;IO PORT 3
                    0079  DISPLY      EQU 84H             ;DISPLAY LATCH
                    0080  SCAN        EQU 85H             ;DISPLAY SCAN LATCH
                    0081  KEYBUF      EQU 86H             ;KEYBOARD BUFFER
                    0082  IO7         EQU 87H             ;ENABLE/DISABLE SINGLE STEPPER (IF INSTALLED)
                    0083  #ENDIF
                    0084  ;-------------------------
                    0085  ; MONITOR GLOBAL VARIABLES
                    0086  ;-------------------------
                    0087  #IFDEF TEC-1
0FB4:               0088  FUNTBL      EQU 0FB4H           ;FN TABLE ADDRESS
                    0089  #ELSE
                    0090  FUNTBL      EQU 3FB4H           ;FN TABLE ADDRESS
                    0091  #ENDIF
                    0092  ;
                    0093  ; DALLAS SMARTWATCH REGISTERS
                    0094  ;
                    0095  ;CALMDE      EQU 3FB6H           ;CALENDAR MODE
                    0096  ;SWREG0      EQU 3FB8H           ;10THS, 100THS
                    0097  ;SWREG1      EQU 3FB9H           ;SECONDS
                    0098  ;SWREG2      EQU 3FBAH           ;MINUTES
                    0099  ;SWREG3      EQU 3FBBH           ;HOURS
                    0100  ;SWREG4      EQU 3FBCH           ;DAY
                    0101  ;SWREG5      EQU 3FBDH           ;DATE
                    0102  ;SWREG6      EQU 3FBEH           ;MONTH
                    0103  ;SWREG7      EQU 3FBFH           ;YEAR
                    0104  ;
                    0105  ;CALMDE      EQU 0FB6H           ;CALENDAR MODE
                    0106  ;SWREG0      EQU 0FB8H           ;10THS, 100THS
                    0107  ;SWREG1      EQU 0FB9H           ;SECONDS
                    0108  ;SWREG2      EQU 0FBAH           ;MINUTES
                    0109  ;SWREG3      EQU 0FBBH           ;HOURS
                    0110  ;SWREG4      EQU 0FBCH           ;DAY
                    0111  ;SWREG5      EQU 0FBDH           ;DATE
                    0112  ;SWREG6      EQU 0FBEH           ;MONTH
                    0113  ;SWREG7      EQU 0FBFH           ;YEAR
                    0114  ;
                    0115  
                    0116  #IFDEF TEC-1
0FC0:               0117  BAUD        EQU 0FC0H           ;BAUD RATE
0FC2:               0118  KEYTIM      EQU 0FC2H           ;BEEP DELAY
0FC4:               0119  SPTEMP      EQU 0FC4H           ;TEMP SYSTEM CALL SP
                    0120  #ELSE
                    0121  BAUD        EQU 3FC0H           ;BAUD RATE
                    0122  KEYTIM      EQU 3FC2H           ;BEEP DELAY
                    0123  SPTEMP      EQU 3FC4H           ;TEMP SYSTEM CALL SP
                    0124  #ENDIF
                    0125  ;
                    0126  ; BLOCK FUNCTIONS
                    0127  ;
                    0128  ;COUNT       EQU 3FC6H           ;NUMBER OF BYTES TO MOVE
                    0129  ;BLKSRT      EQU 3FC8H           ;BLOCK START ADDRESS
                    0130  ;BLKEND      EQU 3FCAH           ;BLOCK END ADDRESS
                    0131  ;BLKDST      EQU 3FCCH           ;DESTINATION ADDRESS
                    0132  ;COUNT       EQU 0FC6H           ;NUMBER OF BYTES TO MOVE
                    0133  ;BLKSRT      EQU 0FC8H           ;BLOCK START ADDRESS
                    0134  ;BLKEND      EQU 0FCAH           ;BLOCK END ADDRESS
                    0135  ;BLKDST      EQU 0FCCH           ;DESTINATION ADDRESS
                    0136  ;
                    0137  ;FUNJMP      EQU 3FCEH           ;FN FN KEY JUMP ADDRESS
                    0138  ;FUNJMP      EQU 0FCEH           ;FN FN KEY JUMP ADDRESS
                    0139  ;
                    0140  ; DISPLAY SCAN REGISTERS
                    0141  ;
                    0142  #IFDEF TEC-1
0FD0:               0143  DISBUF      EQU 0FD0H           ;DISPLAY BUFFER
0FD6:               0144  ONTIM       EQU 0FD6H           ;DISPLAY SCAN ON TIME
0FD7:               0145  OFTIM       EQU 0FD7H           ;DISPLAY SCAN OFF TIME
                    0146  #ELSE
                    0147  DISBUF      EQU 3FD0H           ;DISPLAY BUFFER
                    0148  ONTIM       EQU 3FD6H           ;DISPLAY SCAN ON TIME
                    0149  OFTIM       EQU 3FD7H           ;DISPLAY SCAN OFF TIME
                    0150  #ENDIF
                    0151  ;
                    0152  ; MONITOR VARIABLES
                    0153  ;
                    0154  #IFDEF TEC-1
0FD8:               0155  MODE        EQU 0FD8H           ;DISPLAY MODE
0FDA:               0156  ADRESS      EQU 0FDAH           ;USER ADDRESS
0FDC:               0157  KEYDEL      EQU 0FDCH           ;KEYPRESS AUTO INC/DEC DELAY
                    0158  #ELSE
                    0159  MODE        EQU 3FD8H           ;DISPLAY MODE
                    0160  ADRESS      EQU 3FDAH           ;USER ADDRESS
                    0161  KEYDEL      EQU 3FDCH           ;KEYPRESS AUTO INC/DEC DELAY
                    0162  #ENDIF
                    0163  ;
                    0164  ; TEMPORARY REGISTER STORAGE
                    0165  ;
                    0166  #IFDEF TEC-1
0FDE:               0167  REGPNT      EQU 0FDEH           ;REGISTER POINTER
0FE0:               0168  PC_REG      EQU 0FE0H           ;PROGRAM COUNTER
0FE2:               0169  AF_REG      EQU 0FE2H           ;ACCUMULATOR,FLAG
0FE4:               0170  BC_REG      EQU 0FE4H           ;BC REGISTER PAIR
0FE6:               0171  DE_REG      EQU 0FE6H           ;DE REGISTER PAIR
0FE8:               0172  HL_REG      EQU 0FE8H           ;HL REGISTER PAIR
0FEA:               0173  IX_REG      EQU 0FEAH           ;INDEX REGISTER X
0FEC:               0174  IY_REG      EQU 0FECH           ;INDEX REGISTER Y
0FEE:               0175  SP_REG      EQU 0FEEH           ;STACK POINTER
                    0176  #ELSE
                    0177  REGPNT	EQU	    3FDEH	        ;REGISTER POINTER
                    0178  PC_REG	EQU	    3FE0H	        ;PROGRAM COUNTER
                    0179  AF_REG	EQU	    3FE2H	        ;ACCUMULATOR,FLAG
                    0180  BC_REG	EQU	    3FE4H           ;BC REGISTER PAIR
                    0181  DE_REG	EQU	    3FE6H           ;DE REGISTER PAIR
                    0182  HL_REG	EQU	    3FE8H           ;HL REGISTER PAIR
                    0183  IX_REG	EQU	    3FEAH           ;INDEX REGISTER X
                    0184  IY_REG	EQU	    3FECH           ;INDEX REGISTER Y
                    0185  SP_REG	EQU	    3FEEH           ;STACK POINTER
                    0186  #ENDIF
                    0187  ;
                    0188  ; RESTART JUMP TABLE AND HARWARE TEST
                    0189  ;
                    0190  #IFDEF TEC-1
0FF0:               0191  RST08       EQU 0FF0H           ;RESTART 08H JUMP
0FF2:               0192  RST10       EQU 0FF2H           ;RESTART 10H JUMP
0FF4:               0193  RST18       EQU 0FF4H           ;RESTART 18H JUMP
0FF6:               0194  RST20       EQU 0FF6H           ;RESTART 20H JUMP
0FF8:               0195  RST28       EQU 0FF8H           ;RESTART 28H JUMP
0FFA:               0196  RST38       EQU 0FFAH           ;INT INTERRUPT JUMP
0FFC:               0197  RST66       EQU 0FFCH           ;NMI INTERRUPT JUMP
0FFE:               0198  RAMSUM      EQU 0FFEH           ;USER RAM CHECKSUM
0FFF:               0199  DALLAS      EQU 0FFFH           ;RAM TEST LOCATION
                    0200  #ELSE
                    0201  RST08       EQU 3FF0H           ;RESTART 08H JUMP
                    0202  RST10       EQU 3FF2H           ;RESTART 10H JUMP
                    0203  RST18       EQU 3FF4H           ;RESTART 18H JUMP
                    0204  RST20       EQU 3FF6H           ;RESTART 20H JUMP
                    0205  RST28       EQU 3FF8H           ;RESTART 28H JUMP
                    0206  RST38       EQU 3FFAH           ;INT INTERRUPT JUMP
                    0207  RST66       EQU 3FFCH           ;NMI INTERRUPT JUMP
                    0208  RAMSUM      EQU 3FFEH           ;USER RAM CHECKSUM
                    0209  DALLAS      EQU 3FFFH           ;RAM TEST LOCATION
                    0210  #ENDIF
                    0211  ;----------------
                    0212  ; RESTART VECTORS
                    0213  ;----------------
                    0214  ;
                    0215  ;  RESTART 00H - RST 0
                    0216  ;WHEN POWER IS APPLIED TO THE SOUTHERN CROSS
                    0217  ;THE Z80 STARTS EXECUTING INSTRUCTIONS FROM HERE
                    0218  ;
                    0219              ORG 0000H
0000: C3 00 02      0220  RSTVEC      JP RESET
                    0221  ;
                    0222  ; RESTART 08H - RST 1
                    0223  ;
                    0224              ORG 0008H
0008: E5            0225              PUSH HL
0009: 2A F0 0F      0226              LD HL,(RST08)
000C: E9            0227              JP (HL)
                    0228  ;
                    0229  ; RESTART 10H - RST 2
                    0230  ;
                    0231              ORG 0010H
0010: E5            0232              PUSH HL
0011: 2A F2 0F      0233              LD HL,(RST10)
0014: E9            0234              JP (HL)
                    0235  ;
                    0236  ; RESTART 18H - RST 3
                    0237  ;
                    0238              ORG 0018H
0018: E5            0239              PUSH HL
0019: 2A F4 0F      0240              LD HL,(RST18)
001C: E9            0241              JP (HL)
                    0242  ;
                    0243  ; RESTART 20H - RST 4
                    0244  ;
                    0245              ORG 0020H
0020: E5            0246              PUSH HL
0021: 2A F6 0F      0247              LD HL,(RST20)
0024: E9            0248              JP (HL)
                    0249  ;
                    0250  ; RESTART 28H - RST 5
                    0251  ;
                    0252              ORG 0028H
0028: E5            0253              PUSH HL
0029: 2A F8 0F      0254              LD HL,(RST28)
002C: E9            0255              JP (HL)
                    0256  ;
                    0257  ; RESTART 30H - RST 6 - MONITOR ROUTINES ENTRY POINT
                    0258  ;
                    0259              ORG 0030H
0030: C3 6E 00      0260  RST30       JP SYSCALL
                    0261  ;
                    0262  ; RESTART 38H - RST 7     BREAKPOINT HANDLER
                    0263  ;IF INTERRUPTS ARE ENABLED,AND AN
                    0264  ;INT OCCURS- FURTHER INTERRUPTS
                    0265  ;ARE DISABLED, THE PROGRAM COUNTER
                    0266  ;IS PUSHED ONTO THE STACK, AND EXECUTION
                    0267  ;STARTS HERE
                    0268  ;
                    0269              ORG 0038H
0038: E5            0270              PUSH HL
0039: 2A FA 0F      0271              LD HL,(RST38)
003C: E9            0272              JP (HL)
                    0273  ;
                    0274  ; RESTART 66H NMI VECTOR
                    0275  ; SAME AS ABOVE BUT NMI CANNOT BE DISABLED.
                    0276  ;
                    0277              ORG 0066H
0066: E5            0278              PUSH HL
0067: 2A FC 0F      0279              LD HL,(RST66)
006A: E9            0280              JP (HL)
                    0281                       
006B: E1            0282  IGNORE      POP HL            ;DON'T FORGET TO DO THIS, DUMMY!
                    0283                                ;OTHERWISE THE WRONG RETURN ADDRESS WILL BE ON THE STACK.
006C: ED 45         0284              RETN
                    0285  ;--------------------
                    0286  ; SYSTEM CALL HANDLER
                    0287  ;--------------------
                    0288  ;CALLS TO BASIC I/O AND OTHER ROUTINES
                    0289  ;WITHIN THE MONITOR HAVE BEEN ASSIGNED
                    0290  ;SYSTEM CALL NUMBERS TO AVOID RE-WRITING
                    0291  ;USER SOFTWARE IF MONITOR ABSOLUTE ADDRESSES
                    0292  ;CHANGE IN SUBSEQUENT MONITORS
                    0293  ;
                    0294  ;ENTRY : C = CALL NUMBER
                    0295  ;SEE ROUTINES FOR ENTRY AND EXIT
                    0296  ;PARAMETERS
                    0297  ;
006E: 3B            0298  SYSCALL     DEC SP
006F: 3B            0299              DEC SP              ;LEAVE SPACE FOR SYSCALL
0070: ED 73 C4 0F   0300              LD (SPTEMP),SP      ;POINTS TO SYSCALL LO
0074: F5            0301              PUSH AF
0075: D5            0302              PUSH DE
0076: E5            0303              PUSH HL             ;SAVE REGISTERS
0077: 79            0304              LD A,C              ;GET CALL NUMBER
0078: E6 7F         0305              AND 127             ;ENSURE IN LIMITS
007A: CB 27         0306              SLA A               ;MULTIPLY BY TWO
007C: 26 01         0307              LD H,1              ;LOAD JUMP TABLE HIGH BYTE
007E: 6F            0308              LD L,A              ;LOAD INDEX
007F: 7E            0309              LD A,(HL)
0080: 23            0310              INC HL
0081: 56            0311              LD D,(HL)           ;GET JUMP ADDRESS
0082: 2A C4 0F      0312              LD HL,(SPTEMP)      ;POINT TO SYSCALL LO
0085: 77            0313              LD (HL),A           ;PUT SYSCALL LO ON STACK
0086: 23            0314              INC HL
0087: 7A            0315              LD A,D
0088: 77            0316              LD (HL),A           ;PUT SYSCALL HI ON STACK
0089: E1            0317              POP HL
008A: D1            0318              POP DE
008B: F1            0319              POP AF              ;RESTORE REGISTERS
008C: C9            0320              RET                 ;JUMPS TO SYSTEM CALL
                    0321  ;-----------------------
                    0322  ; SYSTEM CALL JUMP TABLE
                    0323  ;-----------------------
                    0324              ORG 0100H
0100: 6E 02 7E 03   0325  SYSJMP      .DW MAIN,VERS
0104: 82 03 97 03   0326              .DW DISADD,DISBYT,CLRBUF,SCAND
0108: FB 03 D0 03   0326  
010C: A0 03 AD 03   0327              .DW CONBYT,CONVHI,CONVLO
0110: B1 03         0327  
0112: 0A 04 16 04   0328              .DW SKEYIN,SKEYRL,KEYIN,KEYREL
0116: 22 04 2B 04   0328  
011A: 34 04 57 04   0329              .DW MENU,CHKSUM
                    0330  ;            .DW MUL16
011E: 6E 02         0331              .DW MAIN
                    0332  ;            .DW RAND
0120: 6E 02         0333              .DW MAIN
0122: 67 04 6E 04   0334              .DW INDEXB,INDEXW
                    0335  ;            .DW MUSIC
0126: 6E 02         0336              .DW MAIN
0128: 77 04 97 04   0337              .DW TONE,BEEP
                    0338  ;            .DW SKATE
012C: 6E 02         0339              .DW MAIN
012E: 00 07 2B 07   0340              .DW TXDATA,RXDATA,ASCHEX
0132: F7 06         0340  
                    0341  ;            .DW WWATCH
0134: 6E 02         0342              .DW MAIN
                    0343  ;            .DW RWATCH
0136: 6E 02         0344              .DW MAIN 
                    0345  ;            .DW ONESEC
0138: 6E 02         0346              .DW MAIN
                    0347  ;            .DW RLSTEP
013A: 6E 02         0348              .DW MAIN
013C: A7 07         0349              .DW DELONE
013E: 94 07         0350              .DW SPLIT
                    0351  ;------------------------------
                    0352  ; POWER UP RESET / MANUAL RESET
                    0353  ;------------------------------
                    0354              ORG 0200H
                    0355  ;
                    0356  ; WAIT FOR SMART SOCKET
                    0357  ; TO RECOVER FROM POWER DOWN
                    0358  ;
0200: 3E 55         0359  RESET       LD A,55H
0202: 32 FF 0F      0360              LD (DALLAS),A       ;WRITE TO RAM
0205: AF            0361              XOR A
0206: D3 02         0362              OUT (DISPLY),A      ;WRITE NOTHING TO
0208: D3 01         0363              OUT (SCAN),A        ;ON BOARD I/O
020A: DB 00         0364              IN A,(KEYBUF)       ;TO HELP DEBUGGING
020C: 3A FF 0F      0365              LD A,(DALLAS)       ;READ FROM RAM
020F: FE 55         0366              CP 55H              ;IS IT READY?
0211: C2 00 02      0367              JP NZ,RESET         ;KEEP TRYING
                    0368  ;
                    0369  ; LOAD STACK POINTER
                    0370  ;
0214: 31 00 0F      0371  RESET1      LD SP,SYSTEM
                    0372  ;
                    0373  ; SET UP RESTART VECTORS
                    0374  ;
0217: 21 14 02      0375              LD HL,RESET1
021A: 22 F0 0F      0376              LD (RST08),HL
021D: 22 F2 0F      0377              LD (RST10),HL
0220: 22 F4 0F      0378              LD (RST18),HL
0223: 22 F6 0F      0379              LD (RST20),HL
0226: 22 F8 0F      0380              LD (RST28),HL
0229: 21 6B 00      0381              LD HL,IGNORE
022C: 22 FC 0F      0382              LD (RST66),HL       ;NMI INTERRUPT
022F: 21 C1 04      0383              LD HL,SSTEP
0232: 22 FA 0F      0384              LD (RST38),HL       ;SINGLE STEPPER
                    0385  ;
                    0386  ; SET INTERRUPT MODE 1 - USE THE AUTOMATED INTERRUPT
                    0387  ;
0235: ED 56         0388              IM 1
0237: FB            0389              EI                  ;ENABLE INTERRUPTS
                    0390  ;
                    0391  ; PERFORM CHECKSUM ON USER RAM
                    0392  ;
0238: 21 00 08      0393              LD HL,RAMSRT        ;START OF USER RAM
023B: 11 FF 0F      0394              LD DE,RAMEND        ;END OF USER RAM
023E: CD 57 04      0395              CALL CHKSUM
0241: 32 FE 0F      0396              LD (RAMSUM),A       ;RAM CHECKSUM
                    0397  ;
                    0398  ; SET UP DEFAULT VARIABLES
                    0399  ;
0244: 21 16 06      0400              LD HL,FUNLST
0247: 22 B4 0F      0401              LD (FUNTBL),HL      ;FUNCTION KEY TABLE
024A: 21 09 06      0402              LD HL,CANCEL
                    0403  ;            LD (FUNJMP),HL      ;FN FN JUMP
024D: 3E 00         0404              LD A,00H
024F: 32 DE 0F      0405              LD (REGPNT),A       ;INIT SINGLE STEPPER
0252: 21 1B 00      0406              LD HL,B4800
0255: 22 C0 0F      0407              LD (BAUD),HL        ;DEFAULT SERIAL=4800 BAUD
0258: 21 00 02      0408              LD HL,0200H
025B: 22 DC 0F      0409              LD (KEYDEL),HL      ;INSTEAD OF BEEP DELAY IN AUTO INC/DEC
025E: 3E 07         0410              LD A,07H
0260: 32 D6 0F      0411              LD (ONTIM),A        ;DISPLAY ON TIME
0263: 3E 0A         0412              LD A,0AH
0265: 32 D7 0F      0413              LD (OFTIM),A        ;DISPLAY OFF TIME
0268: CD 97 04      0414              CALL BEEP
026B: CD 97 04      0415              CALL BEEP
                    0416  ;-----------------
                    0417  ; SET UP MAIN LOOP
                    0418  ;-----------------
026E: 31 00 0F      0419  MAIN        LD SP,SYSTEM        ;SET STACK
0271: 21 00 08      0420              LD HL,RAMSRT
0274: 22 DA 0F      0421              LD (ADRESS),HL      ;DEFAULT ADDRESS
0277: 3A D8 0F      0422              LD A,(MODE)
027A: F6 80         0423              OR 80H              ;START OFF IN DATA MODE
027C: 32 D8 0F      0424              LD (MODE),A
                    0425  ;
                    0426  ; SCAN THE DISPLAYS UNTIL A KEY IS PRESSED
                    0427  ;
027F: CD 59 03      0428  MAIN1       CALL UPDATE
0282: CD 0A 04      0429  MAIN2       CALL SKEYIN         ;WAIT FOR A KEY
0285: 21 94 02      0430              LD HL,MENLST        ;USE THE MENU HANDLER
0288: CD 34 04      0431              CALL MENU           ;ROUTINE FOR EACH KEY
028B: CD 59 03      0432              CALL UPDATE         ;UPDATE BUFFER AND
028E: CD 16 04      0433              CALL SKEYRL         ;WAIT FOR KEY RELEASE
0291: C3 82 02      0434              JP MAIN2
                    0435  ;
                    0436  ; MAIN MENU KEY TABLE
                    0437  ;
0294: 14            0438  MENLST      .DB 20
0295: 00 01 02 03   0439              .DB 00H,01H,02H,03H,04H,05H,06H,07H
0299: 04 05 06 07   0439  
029D: 08 09 0A 0B   0440              .DB 08H,09H,0AH,0BH,0CH,0DH,0EH,0FH
02A1: 0C 0D 0E 0F   0440  
02A5: 10 11 12 13   0441              .DB 10H,11H,12H,13H
02A9: D1 02 D1 02   0442              .DW HEXKEY,HEXKEY,HEXKEY,HEXKEY
02AD: D1 02 D1 02   0442  
02B1: D1 02 D1 02   0443              .DW HEXKEY,HEXKEY,HEXKEY,HEXKEY
02B5: D1 02 D1 02   0443  
02B9: D1 02 D1 02   0444              .DW HEXKEY,HEXKEY,HEXKEY,HEXKEY
02BD: D1 02 D1 02   0444  
02C1: D1 02 D1 02   0445              .DW HEXKEY,HEXKEY,HEXKEY,HEXKEY
02C5: D1 02 D1 02   0445  
                    0446  #IFDEF TEC-1           
02C9: 0F 03 34 03   0447              .DW INCKEY,DECKEY,FUNKEY,ADDKEY    ;TEC KEYS    +  -  GO  AD        
02CD: EA 05 03 03   0447  
                    0448  #ELSE                   
                    0449              .DW FUNKEY,ADDKEY,INCKEY,DECKEY    ;SC-1 KEYS  FN  AD  +  -
                    0450  #ENDIF
                    0451  ;---------------------------------------------------
                    0452  ; ENTER HEX KEY AS LEAST SIGNIFICANT ADDRESS OR DATA
                    0453  ;---------------------------------------------------
02D1: CD 97 04      0454  HEXKEY      CALL BEEP
02D4: 21 D8 0F      0455              LD HL,MODE
02D7: CB 7E         0456              BIT 7,(HL)          ;ADDR OR DATA MODE?
02D9: CA EA 02      0457              JP Z,HEXKY2         ;IN ADDR MODE
                    0458  ;
                    0459  ; IN DATA MODE
                    0460  ;
02DC: 2A DA 0F      0461  HEXKY1      LD HL,(ADRESS)
02DF: CB 26         0462              SLA (HL)            ;FROM THE CURRENT
02E1: CB 26         0463              SLA (HL)            ;ADDRESS,MOVE THE
02E3: CB 26         0464              SLA (HL)            ;LSN TO THE MSN.
02E5: CB 26         0465              SLA (HL)            ;PUT THE KEY IN
02E7: B6            0466              OR (HL)             ;THE NEW DATA BACK AT
02E8: 77            0467              LD (HL),A           ;THE CURRENT ADDRESS.
02E9: C9            0468              RET
                    0469  ;
                    0470  ; IN ADDRESS MODE
                    0471  ;
02EA: 2A DA 0F      0472  HEXKY2      LD HL,(ADRESS)
02ED: CB 25         0473              SLA L               ;CURRENT ADDRESS
02EF: CB 14         0474              RL H                ;AND DO A 16 BIT
02F1: CB 25         0475              SLA L               ;LEFT SHIFT 4 TIMES
02F3: CB 14         0476              RL H                ;TO MAKE  ROOM
02F5: CB 25         0477              SLA L               ;FOR THE NEW KEY
02F7: CB 14         0478              RL H
02F9: CB 25         0479              SLA L
02FB: CB 14         0480              RL H
02FD: B5            0481              OR L                ;IT IN THE LEAST
02FE: 6F            0482              LD L,A              ;SIGNIFICANT NYBBLE
02FF: 22 DA 0F      0483              LD (ADRESS),HL      ;SAVE CURRENT ADDRESS
0302: C9            0484              RET
                    0485  ;-------------
                    0486  ; CHANGE MODES
                    0487  ;-------------
0303: CD 97 04      0488  ADDKEY      CALL BEEP
0306: 3A D8 0F      0489              LD A,(MODE)
0309: EE 80         0490              XOR 80H             ;TOGGLE MODE
030B: 32 D8 0F      0491              LD (MODE),A
030E: C9            0492              RET
                    0493  ;------------------
                    0494  ; INCREMENT ADDRESS
                    0495  ;------------------
030F: CD 97 04      0496  INCKEY      CALL BEEP
0312: 2A DA 0F      0497  INCKY1      LD HL,(ADRESS)
0315: 23            0498              INC HL              ;INC ADDRESS
0316: 22 DA 0F      0499              LD (ADRESS),HL
0319: CD 59 03      0500              CALL UPDATE
031C: 2A DC 0F      0501              LD HL,(KEYDEL)      ;AUTO REPEAT DELAY
031F: CD D0 03      0502  INCKY2      CALL SCAND
0322: DB 00         0503              IN A,(KEYBUF)
                    0504  #IFDEF  TEC-1
0324: CB 77         0505              BIT 6,A
                    0506  #ELSE
                    0507              BIT 5,A
                    0508  #ENDIF                
                    0509  #IFDEF DA_ACTIVE_LOW
0326: 20 0B         0510              JR NZ,INCKY3        ;KEY RELEASED
                    0511  #ELSE
                    0512              JR Z,INCKY3         ;KEY RELEASED
                    0513  #ENDIF              
0328: 11 01 00      0514              LD DE,0001H
032B: ED 52         0515              SBC HL,DE
032D: D2 1F 03      0516              JP NC,INCKY2
0330: C3 12 03      0517              JP INCKY1
0333: C9            0518  INCKY3      RET
                    0519  ;------------------
                    0520  ; DECREMENT ADDRESS
                    0521  ;------------------
0334: CD 97 04      0522  DECKEY      CALL BEEP
0337: 2A DA 0F      0523  DECKY1      LD HL,(ADRESS)
033A: 2B            0524              DEC HL              ;DEC ADDRESS
033B: 22 DA 0F      0525              LD (ADRESS),HL
033E: CD 59 03      0526              CALL UPDATE
0341: 2A DC 0F      0527              LD HL,(KEYDEL)      ;AUTO REPEAT DELAY
0344: CD D0 03      0528  DECKY2      CALL SCAND
0347: DB 00         0529              IN A,(KEYBUF)       ;READ KEYBOARD
                    0530  #IFDEF  TEC-1
0349: CB 77         0531              BIT 6,A
                    0532  #ELSE
                    0533              BIT 5,A
                    0534  #ENDIF            
                    0535  #IFDEF DA_ACTIVE_LOW           
034B: 20 0B         0536              JR NZ,DECKY3         ; - KEY RELEASED
                    0537  #ELSE         
                    0538              JR Z,DECKY3         ; - KEY RELEASED
                    0539  #ENDIF
034D: 11 01 00      0540              LD DE,0001H
0350: ED 52         0541              SBC HL,DE
0352: D2 44 03      0542              JP NC,DECKY2
0355: C3 37 03      0543              JP DECKY1
0358: C9            0544  DECKY3      RET
                    0545  ;-----------------------------------------
                    0546  ; UPDATE DISPLAY BUFFER TO CURRENT ADDRESS
                    0547  ;-----------------------------------------
0359: 2A DA 0F      0548  UPDATE      LD HL,(ADRESS)
035C: CD 82 03      0549              CALL DISADD         ;AND DATA, PUT IN
035F: 7E            0550              LD A,(HL)
0360: CD 97 03      0551              CALL DISBYT         ;DISPLAY BUFFER
                    0552  ;
                    0553  ; IN ADDRESS OR DATA MODE?
                    0554  ;
0363: 21 D8 0F      0555              LD HL,MODE
0366: CB 7E         0556              BIT 7,(HL)          ;DATA OR ADDR MODE?
0368: CA 73 03      0557              JP Z,ADMODE         ;ADDRESS MODE
                    0558  ;
                    0559  ; SHOW DATA MODE
                    0560  ;
036B: 21 D0 0F      0561              LD HL,DISBUF        ;SET THE DP'S 
036E: 06 02         0562              LD B,2              ;IN THE DATA
0370: C3 78 03      0563              JP SETDP            ;DISPLAY
                    0564  ;
                    0565  ; SHOW ADDRESS MODE
                    0566  ;
0373: 21 D2 0F      0567  ADMODE      LD HL,DISBUF+2
0376: 06 04         0568              LD B,4              ;SET THE DP'S IN THE ADDRESS DISPLAY
                    0569  ;
                    0570  ; SET DECIMAL POINT
                    0571  ;
                    0572  ;SET DP IN THE BYTE POINTED TO BY HL
                    0573  ;
                    0574  #IFDEF TEC-1
0378: CB E6         0575  SETDP       SET 4,(HL)          ;SET BIT 4 FOR DP ON TEC-1 DISPLAY
                    0576  #ELSE
                    0577  SETDP       SET 7,(HL)          ;SET BIT 7 FOR DP ON SC-1 DISPLAY
                    0578  #ENDIF
037A: 23            0579              INC HL              ;POINT TO NEXT BYTE
037B: 10 FB         0580              DJNZ SETDP          ;MORE BITS TO SET
037D: C9            0581              RET
                    0582  ;---------------
                    0583  ; VERSION NUMBER
                    0584  ;---------------
                    0585  ;RETURNS THE SOFTWARE VERSION NUMBER
                    0586  ;SHOULD FUTURE MONITORS EXHIBIT DIFFERENCES
                    0587  ;THE VERSION NUMBER CAN BE USED
                    0588  ;
                    0589  ;           ENTRY : NONE
                    0590  ; EXIT : H = ASCII MINOR VERSION NUMBER
                    0591  ;        L = ASCII MAJOR VERSION NUMBER
                    0592  ;
037E: 21 31 30      0593  VERS        LD HL,3031H ; '01'
0381: C9            0594              RET
                    0595  ;-------------------------
                    0596  ; ADDRESS > DISPLAY BUFFER
                    0597  ;-------------------------
                    0598  ;CONVERT HL TO SEVEN SEGMENT CODE
                    0599  ;AND PUT IN ADDRESS DISPLAY BUFFER.
                    0600  ;
                    0601  ; ENTRY : HL = ADDRESS TO BE DISPLAYED
                    0602  ;
                    0603  ; EXIT  : NO REGISTERS MODIFIED
                    0604  ;
0382: F5            0605  DISADD      PUSH AF
0383: E5            0606              PUSH HL
0384: E5            0607              PUSH  HL
0385: 7C            0608              LD A,H
0386: CD A0 03      0609              CALL CONBYT
0389: 22 D4 0F      0610              LD (DISBUF+4),HL
038C: E1            0611              POP HL
038D: 7D            0612              LD A,L
038E: CD A0 03      0613              CALL CONBYT
0391: 22 D2 0F      0614              LD (DISBUF+2),HL
0394: E1            0615              POP HL
0395: F1            0616              POP AF
0396: C9            0617              RET
                    0618  ;---------------------------
                    0619  ; DATA BYTE > DISPLAY BUFFER
                    0620  ;---------------------------
                    0621  ;CONVERT THE ACC TO SEVEN SEGMENT CODE
                    0622  ;AND PUT IN DATA DISPLAY BUFFER.
                    0623  ;
                    0624  ; ENTRY :  A = DATA DISPLAY BYTE
                    0625  ;
                    0626  ; EXIT  : NO REGISTERS MODIFIED
                    0627  ;
0397: E5            0628  DISBYT      PUSH HL
0398: CD A0 03      0629              CALL CONBYT
039B: 22 D0 0F      0630              LD (DISBUF),HL
039E: E1            0631              POP HL
039F: C9            0632              RET
                    0633  ;---------------------------------------
                    0634  ; CONVERT BYTE TO 7 SEGMENT DISPLAY CODE
                    0635  ;---------------------------------------
                    0636  ; CONVERTS BYTE IN ACC TO SEVEN SEGMENT CODE
                    0637  ; FOR DISPLAY
                    0638  ; ENTRY : A = BYTE TO BE CONVERTED
                    0639  ; EXIT  : H = HI NYBBLE SEVEN SEGMENT CODE
                    0640  ;         L = LO NYBBLE SEVEN SEGMENT CODE
                    0641  ;         A = NOT MODIFIED
03A0: F5            0642  CONBYT      PUSH AF
03A1: F5            0643              PUSH AF
03A2: CD AD 03      0644              CALL CONVHI         ;CONVERT HI NYBBLE
03A5: 67            0645              LD H,A
03A6: F1            0646              POP AF
03A7: CD B1 03      0647              CALL CONVLO         ;CONVERT LO NYBBLE
03AA: 6F            0648              LD L,A
03AB: F1            0649              POP AF
03AC: C9            0650              RET
                    0651  ;---------------------------------------------
                    0652  ; HEXADECIMAL TO SEVEN SEGMENT CODE CONVERSION
                    0653  ;---------------------------------------------
                    0654  ; CONVERTS NYBBLE IN ACC TO SEVEN SEGMENT CODE
                    0655  ; FOR SEVEN SEGMENT DISPLAYS
                    0656  ; CONVHI = CONVERTS HIGH NYBBLE
                    0657  ; CONVLO = CONVERTS LO NYBBLE
                    0658  ;
                    0659  ; ENTRY : A = NYBBLE TO BE CONVERTED
                    0660  ; EXIT  : A = SEVEN SEGMENT CODE
                    0661  ;
03AD: 07            0662  CONVHI      RLCA
03AE: 07            0663              RLCA
03AF: 07            0664              RLCA                ;MOVE TO LO NYBBLE
03B0: 07            0665              RLCA                ;FOR CONVERSION
03B1: C5            0666  CONVLO      PUSH BC
03B2: E5            0667              PUSH HL
03B3: 21 C0 03      0668              LD HL,SEGMNT        ;USE THE HEX VALUE
03B6: E6 0F         0669              AND 0FH             ;TO INDEX TO THE
03B8: 4F            0670              LD C,A              ;THE SEVEN SEGMENT
03B9: 06 00         0671              LD B,00H            ;CODE FOR THAT VALUE
03BB: 09            0672              ADD HL,BC           ;AND RETURN WITH
03BC: 7E            0673              LD A,(HL)           ;CODE IN A
03BD: E1            0674              POP HL
03BE: C1            0675              POP BC
03BF: C9            0676              RET
                    0677  ;
                    0678  ; HEXADECIMAL TO 7 SEGMENT DISPLAY CODE TABLE
                    0679  #IFDEF TEC-1
03C0: EB 28 CD AD   0680  SEGMNT      .DB 0xEB,0x28,0xCD,0xAD ;0,1,2,3
03C4: 2E A7 E7 29   0681              .DB 0x2E,0xA7,0xE7,0x29 ;4,5,6,7
03C8: EF 2F 6F E6   0682              .DB 0xEF,0x2F,0x6F,0xE6 ;8,9,A,B
03CC: C3 EC C7 47   0683              .DB 0xC3,0xEC,0xC7,0x47 ;C,D,E,F
                    0684  #ELSE
                    0685  SEGMNT      .DB 3FH,06H,5BH,4FH ;0,1,2,3
                    0686              .DB 66H,6DH,7DH,07H ;4,5,6,7
                    0687              .DB 7FH,6FH,77H,7CH ;8,9,A,B
                    0688              .DB 39H,5EH,79H,71H ;C,D,E,F
                    0689  #ENDIF
                    0690  ;-------------
                    0691  ; SCAN DISPLAY
                    0692  ;-------------
                    0693  ;AS THE DISPLAYS ARE MULTIPLEXED, THE DATA FOR EACH
                    0694  ;DISPLAY MUST BE LATCHED INTO THE DISPLAY SEGMENT
                    0695  ;LATCH IN TURN AND THE CORRESPONDING BIT IN THE DISPLAY
                    0696  ;SCAN LATCH TURNED ON TO DISPLAY THE DATA.
                    0697  ;TWO SHORT DELAYS ARE USED TO ADJUST THE DUTY
                    0698  ;CYCLE AND HENCE DISPLAY BRIGHTNESS.
                    0699  ;
                    0700  ; ENTRY : NONE
                    0701  ; EXIT  : NO REGISTERS MODIFIED
                    0702  ;
03D0: F5            0703  SCAND       PUSH    AF
03D1: C5            0704              PUSH BC
03D2: E5            0705              PUSH HL             ;SAVE REGISTERS
03D3: 21 D5 0F      0706              LD HL,DISBUF+5
03D6: 0E 20         0707              LD C,20H
03D8: 7E            0708  SCAND1      LD A,(HL)
03D9: D3 02         0709              OUT (DISPLY),A      ;OUTPUT CHARACTER
03DB: 79            0710              LD A,C
03DC: D3 01         0711              OUT (SCAN),A        ;TURN ON DISPLAY
03DE: 3A D6 0F      0712              LD A,(ONTIM)        ;DO A SHORT DELAY
03E1: 47            0713              LD B,A              ;TO ADJUST ON TIME
03E2: 10 FE         0714  SCAND2      DJNZ SCAND2         ;OF DISPLAY
03E4: 78            0715              LD A,B              ;B IS NOW CLEAR, USE
03E5: D3 01         0716              OUT (SCAN),A        ;IT TO TURN OFF SCAN
03E7: 3A D7 0F      0717              LD A,(OFTIM)        ;DO A SHORT DELAY
03EA: 47            0718              LD B,A              ;TO ADJUST OFF TIME
03EB: 10 FE         0719  SCAND3      DJNZ SCAND3         ;OF DISPLAY
03ED: 2B            0720              DEC HL              ;POINT TO NEXT
03EE: CB 09         0721              RRC C               ;ELEMENT IN BUFFER
03F0: 30 E6         0722              JR NC,SCAND1        ;DISPLAY NEXT ELEMENT
03F2: 78            0723              LD A,B              ;B IS NOW CLEAR, USE
03F3: D3 01         0724              OUT (SCAN),A        ;IT TO TURN OFF SCAN
03F5: D3 02         0725              OUT (DISPLY),A      ;AND CLEAR DISPLAY LATCH
03F7: E1            0726              POP HL
03F8: C1            0727              POP BC
03F9: F1            0728              POP AF              ;RESTORE REGISTERS
03FA: C9            0729              RET
                    0730  ;---------------------
                    0731  ; CLEAR DISPLAY BUFFER
                    0732  ;---------------------
03FB: E5            0733  CLRBUF      PUSH HL
03FC: C5            0734              PUSH BC
03FD: 21 D0 0F      0735              LD HL,DISBUF
0400: 06 06         0736              LD B,6
0402: 36 00         0737  CLRBF1      LD (HL),00H         ;PUT ZERO IN 6
0404: 23            0738              INC HL              ;LOCATIONS POINTED
0405: 10 FB         0739              DJNZ CLRBF1         ;TO BY HL
0407: C1            0740              POP BC
0408: E1            0741              POP HL
0409: C9            0742              RET
                    0743  ;------------------
                    0744  ; KEYBOARD ROUTINES
                    0745  ;------------------
                    0746  ;-----------------------------
                    0747  ; SCAN DISPLAY UNTIL KEY PRESS
                    0748  ;-----------------------------
                    0749  ; ENTRY : NONE
                    0750  ; EXIT  : A = KEY VALUE 00H TO 1FH
                    0751  ;         FLAG REGISTER MODIFIED
                    0752  ;
040A: CD D0 03      0753  SKEYIN      CALL SCAND          ;SCAN DISPLAY
040D: DB 00         0754              IN A,(KEYBUF)       ;READ KEYBOARD
                    0755  #IFDEF  TEC-1
040F: CB 77         0756              BIT 6,A
                    0757  #ELSE
                    0758              BIT 5,A
                    0759  #ENDIF       
                    0760              
                    0761  #IFDEF DA_ACTIVE_LOW
0411: 20 F7         0762              JR NZ,SKEYIN         ;NO KEY PRESS
                    0763  #ELSE
                    0764              JR Z,SKEYIN         ;NO KEY PRESS
                    0765  #ENDIF
0413: E6 1F         0766              AND 1FH             ;STRIP UNUSED BITS
0415: C9            0767              RET
                    0768  ;-------------------------------
                    0769  ; SCAN DISPLAY UNTIL KEY RELEASE
                    0770  ;-------------------------------
                    0771  ; ENTRY : NONE
                    0772  ; EXIT  : NONE
                    0773  ;
0416: F5            0774  SKEYRL      PUSH AF
0417: CD D0 03      0775  SKEYL1      CALL SCAND          ;SCAN DISPLAY
041A: DB 00         0776              IN A,(KEYBUF)       ;READ KEYBOARD
                    0777  #IFDEF  TEC-1
041C: CB 77         0778              BIT 6,A
                    0779  #ELSE
                    0780              BIT 5,A
                    0781  #ENDIF       
                    0782              
                    0783  #IFDEF DA_ACTIVE_LOW
041E: 28 F7         0784              JR Z,SKEYL1        ;KEY NOT RELEASED
                    0785  #ELSE 
                    0786              JR NZ,SKEYL1        ;KEY NOT RELEASED
                    0787  #ENDIF
0420: F1            0788              POP AF
0421: C9            0789              RET
                    0790  ;-------------------
                    0791  ; WAIT FOR KEY PRESS
                    0792  ;-------------------
                    0793  ; ENTRY : NONE
                    0794  ; EXIT  : A = KEY VALUE 00H TO 1FH
                    0795  ;         FLAG REGISTER MODIFIED
                    0796  ;
0422: DB 00         0797  KEYIN       IN A,(KEYBUF)       ;READ KEYBOARD
                    0798  #IFDEF  TEC-1
0424: CB 77         0799              BIT 6,A
                    0800  #ELSE
                    0801              BIT 5,A
                    0802  #ENDIF       
                    0803  #IFDEF DA_ACTIVE_LOW
0426: 20 FA         0804              JR NZ,KEYIN          ;NO KEY PRESS
                    0805  #ELSE
                    0806              JR Z,KEYIN          ;NO KEY PRESS
                    0807  #ENDIF
0428: E6 1F         0808              AND 1FH             ;STRIP UNUSED BITS
042A: C9            0809              RET
                    0810  ;---------------------
                    0811  ; WAIT FOR KEY RELEASE
                    0812  ;---------------------
                    0813  ; ENTRY : NONE
                    0814  ; EXIT  : NONE
                    0815  ;
042B: F5            0816  KEYREL      PUSH AF
042C: DB 00         0817  KEYRL1      IN A,(KEYBUF)
                    0818  #IFDEF  TEC-1
042E: CB 77         0819              BIT 6,A
                    0820  #ELSE
                    0821              BIT 5,A
                    0822  #ENDIF       
                    0823  #IFDEF DA_ACTIVE_LOW
0430: 28 FA         0824              JR Z,KEYRL1
                    0825  #ELSE           
                    0826              JR NZ,KEYRL1
                    0827  #ENDIF
0432: F1            0828              POP AF
0433: C9            0829              RET
                    0830  ;-----------------
                    0831  ; KEY MENU HANDLER
                    0832  ;-----------------
                    0833  ; COMPARES ACC AGAINST TABLE OF ELEMENTS,
                    0834  ; IF FOUND JUMP TO ADDRESS CORRESPONDING TO
                    0835  ; THAT ELEMENT, RETURNS IF ELEMENT NOT FOUND.
                    0836  ; ENTRY :  A = ELEMENT TO LOOK FOR
                    0837  ;         HL = POINTS TO TABLE
                    0838  ; EXIT  :  ELEMENT NOT FOUND
                    0839  ;           HL HOLDS ADDRESS OF LAST ELEMENT
                    0840  ;          ELEMENT FOUND
                    0841  ;           CONTROL PASSES TO JUMP ADDRESS WITH
                    0842  ;          RETURN ADDRESS OF MENU CALL ON STACK
                    0843  ;
0434: F5            0844  MENU        PUSH AF
0435: C5            0845              PUSH BC
0436: D5            0846              PUSH DE             ;SAVE REGISTERS
0437: E5            0847              PUSH HL             ;CALCULATE ADDRESS
0438: 16 00         0848              LD D,00H            ;OF THE JUMP TABLE BY
043A: 5E            0849              LD E,(HL)           ;ADDING THE INDEX TO
043B: 23            0850              INC HL              ;THE ELEMENTS
043C: 19            0851              ADD HL,DE           ;TO THE ADDR OF THE
043D: 54            0852              LD D,H              ;TABLE
043E: 5D            0853              LD E,L
043F: E1            0854              POP HL
0440: 46            0855              LD B,(HL)           ;GET NUMBER OF ENTRIES
0441: 23            0856              INC HL              ;POINT TO LIST OF ENTRIES
0442: BE            0857  MENU1       CP (HL)             ;COMPARE WITH ENTRY
0443: 28 09         0858              JR Z,MENU2          ;FOUND VALUE IN TABLE
0445: 23            0859              INC HL              ;NEXT ENTRY IN LIST
0446: 13            0860              INC DE              ;NEXT ENTRY IN
0447: 13            0861              INC DE              ;JUMP TABLE
0448: 10 F8         0862              DJNZ MENU1          ;CHECK MORE ENTRIES
044A: D1            0863              POP DE
044B: C1            0864              POP BC
044C: F1            0865              POP AF
044D: C9            0866              RET                 ;NOT IN TABLE
                    0867  ;
                    0868  ; FOUND ELEMENT IN THE TABLE
                    0869  ; PASS CONTROL TO THE JUMP HANDLER
                    0870  ;
044E: 1A            0871  MENU2       LD A,(DE)           ;GET THE JUMP ADDR
044F: 6F            0872              LD L,A              ;FROM THE TABLE
0450: 13            0873              INC DE              ;AND JUMP TO
0451: 1A            0874              LD A,(DE)           ;THE JUMP ADDRESS
0452: 67            0875              LD H,A              ;FOR THAT ENTRY
0453: D1            0876              POP DE
0454: C1            0877              POP BC
0455: F1            0878              POP AF              ;RESTORE REGISTERS
0456: E9            0879              JP (HL)
                    0880  ;-------------------
                    0881  ; CALCULATE CHECKSUM
                    0882  ;-------------------
                    0883  ;CALCULATES CHECKSUM BETWEEN START AND END (INCLUSIVE)
                    0884  ;
                    0885  ; ENTRY : HL = START OF BLOCK TO SUM
                    0886  ;         DE = END OF BLOCK TO SUM
                    0887  ; EXIT  : A =  CHECKSUM
                    0888  ;         FLAG REGISTER MODIFIED
                    0889  ;
0457: E5            0890  CHKSUM      PUSH HL
0458: D5            0891              PUSH DE
0459: 13            0892              INC DE              ;END OF BLOCK+1
045A: AF            0893              XOR A               ;CLEAR CHECKSUM
045B: 86            0894  CHKSM1      ADD A,(HL)          ;COMPUTE CHEKSUM
045C: 23            0895              INC HL              ;POINT TO NEXT ELEMENT
045D: A7            0896              AND A               ;SET CARRY
045E: E5            0897              PUSH HL
045F: ED 52         0898              SBC HL,DE           ;SUBTRACT
0461: E1            0899              POP HL
0462: 38 F7         0900              JR C,CHKSM1         ;MORE ELEMENTS
0464: D1            0901              POP DE
0465: E1            0902              POP HL
0466: C9            0903              RET
                    0904  ;--------------------------
                    0905  ; ACCESS BYTE LOOK UP TABLE
                    0906  ;--------------------------
                    0907  ; USE 8 BIT INDEX TO ACCESS BYTE LOOK
                    0908  ; UP TABLE
                    0909  ; ENTRY :  A = NUMBER OF ELEMENT IN TABLE
                    0910  ;         HL = ADDRESS OF LOOK UP TABLE
                    0911  ; EXIT : HL = ADDRESS OF ELEMENT A
                    0912  ;
0467: D5            0913  INDEXB      PUSH DE
0468: 5F            0914              LD E,A              ;USE DE AS INDEX
0469: 16 00         0915              LD D,0              ;TO ELEMENT IN TABLE
046B: 19            0916              ADD HL,DE           ;BY ADDING TO HL
046C: D1            0917              POP DE
046D: C9            0918              RET
                    0919  ;--------------------------
                    0920  ; ACCESS WORD LOOK UP TABLE
                    0921  ;--------------------------
                    0922  ; USE 8 BIT INDEX TO ACCESS WORD LOOK
                    0923  ; UP TABLE
                    0924  ; ENTRY :  A = NUMBER OF ELEMENT IN TABLE
                    0925  ;         HL = ADDRESS OF LOOK UP TABLE
                    0926  ; EXIT : HL = ADDRESS OF 2 BYTE ELEMENT A
                    0927  ;
046E: D5            0928  INDEXW      PUSH DE
046F: 5F            0929              LD E,A
0470: CB 23         0930              SLA E               ;MULTIPLY BY TWO
0472: 16 00         0931              LD D,0
0474: 19            0932              ADD HL,DE
0475: D1            0933              POP DE
0476: C9            0934              RET
                    0935  ;--------------
                    0936  ; OUTPUT A TONE
                    0937  ;--------------
                    0938  ;
                    0939  ; ENTRY : A = PERIOD/2 OF NOTE
                    0940  ;         HL = DURATION/2 OF NOTE
                    0941  ; EXIT NO REGISTERS MODIFIED
0477: F5            0942  TONE        PUSH AF
0478: C5            0943              PUSH BC
0479: D5            0944              PUSH DE
047A: E5            0945              PUSH HL
047B: 11 01 00      0946              LD DE,0001H
047E: 4F            0947              LD C,A
047F: 29            0948              ADD HL,HL           ;DOUBLE DURATION
0480: AF            0949              XOR A
0481: EE 80         0950  TONE1       XOR 80H             ;TOGGLE SPEAKER BIT
0483: D3 01         0951              OUT (SCAN),A        ;OUTPUT SPEAKER BIT
0485: 41            0952              LD B,C
0486: C5            0953  TONE2       PUSH BC
0487: 06 02         0954              LD B,02H
0489: 10 FE         0955  TONE3       DJNZ TONE3          ;DELAY FOR PERIOD/2
048B: C1            0956              POP BC
048C: 10 F8         0957              DJNZ TONE2          ; DELAY FOR PERIOD/2
048E: ED 52         0958              SBC HL,DE           ;END OF NOTE?
0490: 20 EF         0959              JR NZ,TONE1         ;DO AGAIN
0492: E1            0960              POP HL
0493: D1            0961              POP DE
0494: C1            0962              POP BC
0495: F1            0963              POP AF
0496: C9            0964              RET
                    0965  ;---------------
                    0966  ; KEY ENTRY BEEP
                    0967  ;---------------
0497: E5            0968  BEEP        PUSH HL
0498: F5            0969              PUSH AF
0499: 21 D8 0F      0970              LD HL,MODE
049C: CB 76         0971              BIT 6,(HL)          ;BEEP ENABLED?
049E: 28 0E         0972              JR Z,BEEP2          ;BEEP IS ENABLED
                    0973  ;
                    0974  ; DO KEYPRESS DELAY
                    0975  ;
04A0: D5            0976              PUSH DE             ;DO A SHORT
04A1: 11 01 00      0977              LD DE,0001H         ;DELAY TO PREVENT
04A4: 2A C2 0F      0978              LD HL,(KEYTIM)      ;RECOGNITION
04A7: ED 52         0979  BEEP1       SBC HL,DE           ;OF DOUBLE
04A9: 30 FC         0980              JR NC,BEEP1         ;KEY STROKES
04AB: D1            0981              POP     DE
04AC: 18 10         0982              JR BEEP3
                    0983  ;
                    0984  ; OUTPUT KEYPRESS TONES
                    0985  ;
04AE: 3E 24         0986  BEEP2       LD A,24H
04B0: 21 30 00      0987              LD HL,0030H
04B3: CD 77 04      0988              CALL TONE           ;DO FIRST TONE
04B6: 3E 0E         0989              LD A,0EH
04B8: 21 50 00      0990              LD HL,0050H
04BB: CD 77 04      0991              CALL TONE           ;DO SECOND TONE
04BE: F1            0992  BEEP3       POP AF
04BF: E1            0993              POP HL
04C0: C9            0994              RET
                    0995  ;----------------------------------------
                    0996  ; BREAKPOINT AND SINGLE STEPPING ROUTINES
                    0997  ;----------------------------------------
                    0998  ;DISPLAYS AND MODIFIES REGISTERS AFTER BREAKPOINT
                    0999  ; (RST 38H) OR SINGLE STEP INTERRUPT (IF HARDWARE
                    1000  ; ATTACHED).
                    1001  ;INSERT RST 38H (FFH) IN PROGRAM TO EXAMINE
                    1002  ; AND MODIFY REGISTERS.
                    1003  ;
04C1: E1            1004  SSTEP       POP HL              ;GET HL BACK
04C2: F5            1005              PUSH AF             ;SAVE AF FOR LATER
04C3: 22 E8 0F      1006              LD (HL_REG),HL
04C6: ED 53 E6 0F   1007              LD (DE_REG),DE
04CA: ED 43 E4 0F   1008              LD (BC_REG),BC
04CE: DD 22 EA 0F   1009              LD (IX_REG),IX
04D2: FD 22 EC 0F   1010              LD (IY_REG),IY      ;SAVE REGISTERS
04D6: E1            1011              POP HL              ;GET AF BACK
04D7: 22 E2 0F      1012              LD (AF_REG),HL      ;SAVE AF
04DA: E1            1013              POP HL              ;GET PC RETURN ADDRESS
04DB: 22 E0 0F      1014              LD (PC_REG),HL      ;SAVE PC
04DE: ED 73 EE 0F   1015              LD (SP_REG),SP      ;SAVE STACK POINTER
                    1016  ;
                    1017  ; STEP THROUGH,DISPLAY AND EDIT REGISTERS
                    1018  ;
04E2: CD 97 04      1019              CALL BEEP
04E5: 3A DE 0F      1020              LD A,(REGPNT)       ;GET CURRENT REG
04E8: E6 07         1021              AND 7               ;MAKE SURE IN LIMITS
04EA: 32 DE 0F      1022              LD (REGPNT),A       ;SAVE IT
04ED: CD CA 05      1023  DISREG      CALL SETREG         ;SET UP DISPLAY BUFFER
04F0: CD 16 04      1024              CALL SKEYRL         ;WAIT FOR A KEY
04F3: CD 0A 04      1025              CALL SKEYIN         ;WAIT FOR KEY RELEASE
04F6: 21 FF 04      1026              LD HL,REGTBL        ;HANDLE THE KEY
04F9: CD 34 04      1027              CALL MENU           ;AND UPDATE DISPLAY
04FC: C3 ED 04      1028              JP DISREG           ;BEFORE RETURNING TO LOOP
                    1029  ;
                    1030  ; REGISTER DISPLAY KEY TABLE
                    1031  ;
04FF: 14            1032  REGTBL      .DB 14H
0500: 00 01 02 03   1033              .DB 00H,01H,02H,03H,04H,05H,06H,07H
0504: 04 05 06 07   1033  
0508: 08 09 0A 0B   1034              .DB 08H,09H,0AH,0BH,0CH,0DH,0EH,0FH
050C: 0C 0D 0E 0F   1034  
0510: 10 11 12 13   1035              .DB 10H,11H,12H,13H
0514: 4C 05 4C 05   1036              .DW REGKEY,REGKEY,REGKEY,REGKEY
0518: 4C 05 4C 05   1036  
051C: 4C 05 4C 05   1037              .DW REGKEY,REGKEY,REGKEY,REGKEY
0520: 4C 05 4C 05   1037  
0524: 4C 05 4C 05   1038              .DW REGKEY,REGKEY,REGKEY,REGKEY
0528: 4C 05 4C 05   1038  
052C: 4C 05 4C 05   1039              .DW REGKEY,REGKEY,REGKEY,REGKEY
0530: 4C 05 4C 05   1039  
                    1040  #IFDEF TEC-1
0534: 9F 05 B4 05   1041              .DW INCSTP,DECSTP,RETPGM,RETMON         
0538: 7D 05 73 05   1041  
                    1042  #ELSE           
                    1043              .DW RETMON,RETPGM,INCSTP,DECSTP
                    1044  #ENDIF
                    1045  ;
                    1046  ; REGISTER NAME CHARACTERS
                    1047  ;
                    1048  #IFDEF TEC-1
053C: C3 4F         1049  REGNAM      .DW 0x4FC3
053E: 47 6F C3 E6   1050              .DW 0x6F47,0xE6C3,0xECC7
0542: C7 EC         1050  
0544: C2 66 6E 28   1051              .DW 0x66C2,0x286E,0x28AE
0548: AE 28         1051  
054A: 4F A7         1052              .DW 0xA74F
                    1053  #ELSE
                    1054  REGNAM      .DW 7339H
                    1055              .DW 7771H,7C39H,5E79H
                    1056              .DW 7438H,0676H,066EH
                    1057              .DW 6D73H
                    1058  #ENDIF
                    1059  ;--------------
                    1060  ; EDIT REGISTER
                    1061  ;--------------
054C: CD 97 04      1062  REGKEY      CALL BEEP
054F: F5            1063              PUSH AF             ;SAVE KEY FOR LATER
0550: 3A DE 0F      1064              LD A,(REGPNT)
                    1065  ;
                    1066  ; EDIT REGISTER
                    1067  ;
0553: 21 E0 0F      1068              LD HL,PC_REG
0556: CD 6E 04      1069              CALL INDEXW
0559: 4E            1070              LD C,(HL)
055A: 23            1071              INC HL
055B: 46            1072              LD B,(HL)           ;GET REG CONTENTS
055C: CB 21         1073              SLA C
055E: CB 10         1074              RL B
0560: CB 21         1075              SLA C
0562: CB 10         1076              RL B
0564: CB 21         1077              SLA C
0566: CB 10         1078              RL B                ;SHIFT REGISTER
0568: CB 21         1079              SLA C               ;FOUR BITS
056A: CB 10         1080              RL B                ;LEFT AND
056C: F1            1081              POP AF              ;PUT THE KEY
056D: B1            1082              OR C                ;INTO THE LSN
056E: 4F            1083              LD C,A              ;AND PUT THE
056F: 70            1084              LD (HL),B           ;REGISTER BACK
0570: 2B            1085              DEC HL              ;WHERE IT BELONGS
0571: 71            1086              LD (HL),C
0572: C9            1087              RET
                    1088  ;------------------
                    1089  ; RETURN TO MONITOR
                    1090  ;------------------
0573: CD 97 04      1091  RETMON      CALL BEEP
0576: CD 16 04      1092              CALL SKEYRL
0579: FB            1093              EI                  ;ENABLE INTERRUPTS AGAIN
057A: C3 6E 02      1094              JP MAIN
                    1095  ;------------------
                    1096  ; RETURN TO PROGRAM
                    1097  ;------------------
057D: ED 7B EE 0F   1098  RETPGM      LD SP,(SP_REG)      ;PUT STACK POINTER BACK
0581: 2A E0 0F      1099              LD HL,(PC_REG)      ;PUT RETURN
0584: E5            1100              PUSH HL             ;ADDRESS BACK ON STACK
0585: 2A E2 0F      1101              LD HL,(AF_REG)
0588: E5            1102              PUSH HL             ;SAVE AF REG FOR LATER
0589: FD 2A EC 0F   1103              LD IY,(IY_REG)
058D: DD 2A EA 0F   1104              LD IX,(IX_REG)
0591: ED 4B E4 0F   1105              LD BC,(BC_REG)
0595: ED 5B E6 0F   1106              LD DE,(DE_REG)      ;RESTORE REGISTERS
0599: F1            1107              POP AF              ;RESTORE AF
059A: 2A E8 0F      1108              LD HL,(HL_REG)      ;RETORE HL
059D: FB            1109              EI                  ;ENABLE INTERRUPTS
059E: C9            1110              RET                 ;AND RETURN TO PROGRAM
                    1111  ;----------------------
                    1112  ; DISPLAY NEXT REGISTER
                    1113  ;----------------------
059F: CD 97 04      1114  INCSTP      CALL BEEP
05A2: 3A DE 0F      1115              LD A,(REGPNT)
05A5: FE 07         1116              CP A,7              ;END OF REG TABLE?
05A7: CA AF 05      1117              JP Z,INCSP1
05AA: 3C            1118              INC A
05AB: 32 DE 0F      1119              LD (REGPNT),A
05AE: C9            1120              RET
05AF: AF            1121  INCSP1      XOR A
05B0: 32 DE 0F      1122              LD (REGPNT),A
05B3: C9            1123              RET
                    1124  ;--------------------------
                    1125  ; DISPLAY PREVIOUS REGISTER
                    1126  ;--------------------------
05B4: CD 97 04      1127  DECSTP      CALL BEEP
05B7: 3A DE 0F      1128              LD A,(REGPNT)
05BA: FE 00         1129              CP A,0              ;START OF REG TABLE?
05BC: CA C4 05      1130              JP Z,DECSP1
05BF: 3D            1131              DEC A
05C0: 32 DE 0F      1132              LD (REGPNT),A
05C3: C9            1133              RET
05C4: 3E 07         1134  DECSP1      LD A,7
05C6: 32 DE 0F      1135              LD (REGPNT),A
05C9: C9            1136              RET
                    1137  ;-----------------
                    1138  ; DISPLAY REGISTER
                    1139  ;-----------------
05CA: 3A DE 0F      1140  SETREG      LD A,(REGPNT)
05CD: 21 E0 0F      1141              LD HL,PC_REG        ;START OF TABLE
05D0: CD 6E 04      1142              CALL INDEXW         ;GET ELEMENT ADDRESS
05D3: 5E            1143              LD E,(HL)
05D4: 23            1144              INC HL
05D5: 56            1145              LD D,(HL)
05D6: EB            1146              EX DE,HL            ;LOAD REGISTER CONTENTS
05D7: CD 82 03      1147              CALL DISADD
                    1148  ;
                    1149  ; DISPLAY REGISTER NAME
                    1150  ;
05DA: 21 3C 05      1151              LD HL,REGNAM
05DD: CD 6E 04      1152              CALL INDEXW
05E0: 7E            1153              LD A,(HL)
05E1: 32 D0 0F      1154              LD (DISBUF+0),A
05E4: 23            1155              INC HL
05E5: 7E            1156              LD A,(HL)
05E6: 32 D1 0F      1157              LD (DISBUF+1),A
05E9: C9            1158              RET
                    1159  ;------------------
                    1160  ; FUNCTION KEY MENU
                    1161  ;------------------
                    1162  ; WHEN THE FN KEY IS PRESSED, Fn IS DISPLAYED IN THE
                    1163  ; DATA DISPLAYS, THE CURRENT ADDRESS REMAINS IN THE
                    1164  ; ADDRESS DISPLAYS THE PROGRAM THEN WAITS FOR A
                    1165  ; KEYPRESS WHICH WILL SELECT 1 OF 16 ROUTINES.
                    1166  ;
05EA: E1            1167  FUNKEY      POP HL              ;REMOVE RETURN ADDRESS
05EB: CD 97 04      1168              CALL BEEP
05EE: 2A DA 0F      1169  FUNKY1      LD HL,(ADRESS)
05F1: CD 82 03      1170              CALL DISADD         ;DISP ADDR TO REMOVE DP'S
                    1171  #IFDEF TEC-1              
                    1172  ;            LD HL,4764H        ;THIS IS Fn
05F4: 21 0F AF      1173               LD HL,0xAF0F       ;USE THE GO KEY IN THE TEC
                    1174  #ELSE            
                    1175              LD HL,7154H
                    1176  #ENDIF
05F7: 22 D0 0F      1177              LD (DISBUF),HL      ;DISPLAY FN
05FA: CD 16 04      1178              CALL SKEYRL         ;WAIT FOR KEY RELEASE
05FD: CD 0A 04      1179  FUNKY2      CALL SKEYIN
0600: 2A B4 0F      1180              LD HL,(FUNTBL)      ;USE THE MENU HANDLER
0603: CD 34 04      1181              CALL MENU           ;ROUTINE FOR EACH KEY
0606: C3 FD 05      1182              JP FUNKY2           ;TRY AGAIN
                    1183  ;
                    1184  ; RETURN TO MAIN
                    1185  ;
0609: CD 97 04      1186  CANCEL      CALL BEEP
060C: CD 59 03      1187  CANCL1      CALL UPDATE         ;UPDATE DISPLAY BUFFER
060F: CD 16 04      1188              CALL SKEYRL         ;WAIT FOR KEY RELEASE
0612: E1            1189              POP HL              ;REMOVE MENU RETURN
0613: C3 82 02      1190              JP MAIN2
                    1191  ;
                    1192  ; FUNCTION MENU KEY TABLE
                    1193  ;
0616: 05            1194  FUNLST      .DB 05H    
0617: 00 01 07 0B   1195              .DB 00H,01H,07H,0BH,12H
061B: 12            1195  
061C: 26 06         1196              .DW GOEXEC
061E: 31 06         1197              .DW INTELH
0620: 78 07         1198              .DW TRACE
0622: 86 07         1199              .DW SWBEEP
0624: 09 06         1200              .DW CANCEL
                    1201  ;--------------------------
                    1202  ; JUMP TO FUNCTION FUNCTION
                    1203  ;--------------------------
                    1204  ;FUNFUN      LD HL,(FUNJMP)
                    1205  ;            JP (HL)
                    1206  ;------------------------------------------
                    1207  ; FUNCTION 0 - EXECUTE FROM CURRENT ADDRESS
                    1208  ;------------------------------------------
0626: CD 97 04      1209  GOEXEC      CALL BEEP
0629: CD 2B 04      1210              CALL KEYREL
062C: E1            1211              POP HL              ;REMOVE EXEC RETURN
062D: 2A DA 0F      1212              LD HL,(ADRESS)
0630: E9            1213              JP (HL)             ;START EXECUCTION
                    1214  ;------------------------------------
                    1215  ; FUNCTION 1 RECEIVE INTEL HEX FORMAT
                    1216  ;------------------------------------
0631: CD 97 04      1217  INTELH      CALL BEEP
0634: CD 2B 04      1218              CALL KEYREL
0637: DD 21 00 0F   1219              LD IX,SYSTEM        ;POINT TO SYSTEM VARIABLES
                    1220  ;
                    1221  ; WAIT FOR RECORD MARK
                    1222  ;
063B: AF            1223  INTEL1      XOR A
063C: DD 77 03      1224              LD (IX+3),A         ;CLEAR CHECKSUM
063F: CD 2B 07      1225              CALL RXDATA         ;WAIT FOR THE
0642: 38 68         1226              JR C,INTEL5         ;RECORD MARK
0644: FE 3A         1227              CP ':'              ;TO BE TRANSMITTED
0646: 20 F3         1228              JR NZ,INTEL1        ;NOT RECORD MARK
                    1229  ;
                    1230  ; GET RECORD LENGTH
                    1231  ;
0648: CD C7 06      1232              CALL GETBYT
064B: 38 5F         1233              JR C,INTEL5
064D: DD 77 00      1234              LD (IX+0),A         ;NUMBER OF DATA BYTES
                    1235  ;
                    1236  ; GET ADDRESS FIELD
                    1237  ;
0650: CD C7 06      1238              CALL GETBYT
0653: 38 57         1239              JR C,INTEL5
0655: DD 77 02      1240              LD (IX+2),A         ;LOAD ADDRESS HIGH BYTE
0658: CD C7 06      1241              CALL GETBYT
065B: 38 4F         1242              JR C,INTEL5
065D: DD 77 01      1243              LD (IX+1),A         ;LOAD ADDRESS LOW BYTE
                    1244  ;
                    1245  ; GET RECORD TYPE
                    1246  ;
0660: CD C7 06      1247              CALL GETBYT
0663: 38 47         1248              JR C,INTEL5
0665: 20 2A         1249              JR NZ,INTEL4        ;END OF FILE RECORD
                    1250  ;
                    1251  ; READ IN THE DATA
                    1252  ;
0667: DD 46 00      1253              LD B,(IX+0)         ;NUMBER OF DATA BYTES
066A: DD 66 02      1254              LD H,(IX+2)         ;LOAD ADDRESS HIGH BYTE
066D: DD 6E 01      1255              LD L,(IX+1)         ;LOAD ADDRESS LOW BYTE
                    1256  
0670: CD C7 06      1257  INTEL2      CALL GETBYT         ;GET DATA BYTE
0673: 38 37         1258              JR C,INTEL5
0675: 77            1259              LD (HL),A           ;STORE DATA BYTE
0676: 23            1260              INC HL
0677: 10 F7         1261              DJNZ INTEL2         ;LOAD MORE BYTES
                    1262  ;
                    1263  ; GET CHECKSUM AND COMPARE
                    1264  ;
0679: DD 7E 03      1265              LD A,(IX+3)         ;CONVERT CHECKSUM TO
067C: ED 44         1266              NEG                 ;TWO'S COMPLEMENT
067E: DD 77 04      1267              LD (IX+4),A         ;SAVE COMPUTED CHECKSUM
0681: CD C7 06      1268              CALL GETBYT
0684: 38 26         1269              JR C,INTEL5
0686: DD 77 03      1270              LD (IX+3),A         ;SAVE RECORD CHECKSUM
0689: DD BE 04      1271              CP (IX+4)           ;COMPARE CHECKSUM
068C: 28 AD         1272              JR Z,INTEL1         ;CHECKSUM OK,NEXT RECORD
                    1273  ;
                    1274  ; CHECKSUM ERROR
                    1275  ;
068E: C3 B2 06      1276  INTEL3      JP BLKMV1
                    1277  ;
                    1278  ; END OF FILE RECORD
                    1279  ;
0691: DD 7E 03      1280  INTEL4      LD A,(IX+3)         ;CONVERT CHECKSUM TO
0694: ED 44         1281              NEG                 ;TWO'S COMPLEMENT
0696: DD 77 04      1282              LD (IX+4),A         ;SAVE COMPUTED CHECKSUM
0699: CD C7 06      1283              CALL GETBYT
069C: 38 0E         1284              JR C,INTEL5
069E: DD 77 03      1285              LD (IX+3),A         ;SAVE EOF CHECKSUM
06A1: DD BE 04      1286              CP (IX+4)           ;COMPARE CHECKSUM
06A4: 20 E8         1287              JR NZ,INTEL3        ;CHECKSUM ERROR
                    1288  ;
                    1289  ; LOAD COMPLETE
                    1290  ;
                    1291  #IFDEF TEC-1
06A6: 21 C3 00      1292              LD HL,00C3H         ;SHOW C FOR COMPLETE
                    1293  #ELSE
                    1294              LD HL,0039H         ;SHOW C FOR COMPLETE
                    1295  #ENDIF
06A9: C3 B5 06      1296              JP BLKMV2
                    1297  ;
                    1298  ; INTERRUPTED BY KEYBOARD
                    1299  ;
                    1300  #IFDEF TEC-1
06AC: 21 6F 00      1301  INTEL5      LD HL,006FH         ;SHOW A FOR ABORT
                    1302  #ELSE
                    1303  INTEL5      LD HL,0077H         ;SHOW A FOR ABORT
                    1304  #ENDIF
06AF: C3 B5 06      1305              JP BLKMV2        
                    1306  ;
                    1307  ; SHOW ERROR
                    1308  ;
                    1309  #IFDEF TEC-1
06B2: 21 C7 00      1310  BLKMV1      LD HL,00C7H         ;SHOW ERROR
                    1311  #ELSE
                    1312  BLKMV1      LD HL,0079H         ;SHOW ERROR
                    1313  #ENDIF
06B5: CD 97 04      1314  BLKMV2      CALL BEEP
06B8: 22 D0 0F      1315              LD (DISBUF),HL      ;AND WAIT
06BB: CD 0A 04      1316              CALL SKEYIN         ;FOR KEYPRESS
06BE: CD 97 04      1317              CALL BEEP
06C1: CD 16 04      1318              CALL SKEYRL
06C4: C3 0C 06      1319              JP CANCL1         
                    1320  ;--------------------------
                    1321  ; GET BYTE FROM SERIAL PORT
                    1322  ;--------------------------
06C7: C5            1323  GETBYT      PUSH BC
06C8: CD 2B 07      1324              CALL RXDATA
06CB: 38 28         1325              JR C,GETBT3
06CD: CB 77         1326              BIT 6,A
06CF: 28 02         1327              JR Z,GETBT1
06D1: C6 09         1328              ADD A,09H
06D3: E6 0F         1329  GETBT1      AND 0FH
06D5: CB 27         1330              SLA  A
06D7: CB 27         1331              SLA A
06D9: CB 27         1332              SLA A
06DB: CB 27         1333              SLA A
06DD: 4F            1334              LD C,A
                    1335  ;
                    1336  ; GET LOW NYBBLE
                    1337  ;
06DE: CD 2B 07      1338              CALL RXDATA
06E1: 38 12         1339              JR C,GETBT3
06E3: CB 77         1340              BIT 6,A
06E5: 28 02         1341              JR Z,GETBT2
06E7: C6 09         1342              ADD A,09H
06E9: E6 0F         1343  GETBT2      AND 0FH
06EB: B1            1344              OR C
06EC: 47            1345              LD B,A
06ED: DD 86 03      1346              ADD A,(IX+3)
06F0: DD 77 03      1347              LD (IX+3),A         ;ADD TO CHECKSUM
06F3: 78            1348              LD A,B
06F4: A7            1349              AND A               ;CLEAR CARRY
06F5: C1            1350  GETBT3      POP BC
06F6: C9            1351              RET
                    1352  ;-------------------------------
                    1353  ; CONVERT ASCII CHARACTER TO HEX
                    1354  ;-------------------------------
                    1355  ;CONVERTS ASCII 0-9,A-F INTO HEX LSN
                    1356  ;ENTRY : A= ASCII 0-9,A-F
                    1357  ;EXIT  : A= HEX 0-F IN LSN
                    1358  ; A AND F REGISTERS MODIFIED
                    1359  ;
06F7: CB 77         1360  ASCHEX      BIT 6,A
06F9: 28 02         1361              JR Z,ASCHX1
06FB: C6 09         1362              ADD A,09H
06FD: E6 0F         1363  ASCHX1      AND 0FH
06FF: C9            1364              RET
                    1365  ;------------------------
                    1366  ; SERIAL TRANSMIT ROUTINE
                    1367  ;------------------------
                    1368  ;TRANSMIT BYTE SERIALLY ON DOUT
                    1369  ;
                    1370  ; ENTRY : A = BYTE TO TRANSMIT
                    1371  ;  EXIT : NO REGISTERS MODIFIED
                    1372  ;
0700: F5            1373  TXDATA	PUSH	AF
0701: C5            1374  	PUSH	BC
0702: E5            1375  	PUSH	HL
0703: 2A C0 0F      1376  	LD	HL,(BAUD)
0706: 4F            1377  	LD	C,A
                    1378  ;
                    1379  ; TRANSMIT START BIT
                    1380  ;
0707: AF            1381  	XOR	A
0708: D3 01         1382  	OUT	(SCAN),A
070A: CD 5D 07      1383  	CALL	BITIME
                    1384  ;
                    1385  ; TRANSMIT DATA
                    1386  ;
070D: 06 08         1387  	LD	B,08H
070F: CB 09         1388  	RRC	C
0711: CB 09         1389  NXTBIT	RRC	C	;SHIFT BITS TO D6,
0713: 79            1390  	LD	A,C	;LSB FIRST AND OUTPUT
0714: E6 40         1391  	AND	40H	;THEM FOR ONE BIT TIME.
0716: D3 01         1392  	OUT	(SCAN),A
0718: CD 5D 07      1393  	CALL	BITIME
071B: 10 F4         1394  	DJNZ	NXTBIT
                    1395  ;
                    1396  ; SEND STOP BITS
                    1397  ;
071D: 3E 40         1398  	LD	A,40H
071F: D3 01         1399  	OUT	(SCAN),A
0721: CD 5D 07      1400  	CALL	BITIME
0724: CD 5D 07      1401  	CALL	BITIME
0727: E1            1402  	POP	HL
0728: C1            1403  	POP	BC
0729: F1            1404  	POP	AF
072A: C9            1405  	RET
                    1406  ;-----------------------
                    1407  ; SERIAL RECEIVE ROUTINE
                    1408  ;-----------------------
                    1409  ;RECEIVE SERIAL BYTE FROM DIN
                    1410  ;
                    1411  ; ENTRY : NONE
                    1412  ;  EXIT : A= RECEIVED BYTE IF CARRY CLEAR
                    1413  ;         A= KEYBUF, CARRY SET IF KEY PRESSED
                    1414  ; REGISTERS MODIFIED A AND F
                    1415  ;
072B: C5            1416  RXDATA	PUSH	BC
072C: E5            1417  	    PUSH    HL
                    1418  ;
                    1419  ; WAIT FOR START BIT OR EXIT IF KEY PRESS.
                    1420  ;
072D: DB 00         1421  RXDAT1	IN	A,(KEYBUF)
                    1422  
                    1423  #IFDEF  TEC-1
072F: CB 77         1424              BIT 6,A
                    1425  #ELSE
                    1426              BIT 5,A
                    1427  #ENDIF         
0731: 37            1428  	    SCF
                    1429  #IFDEF DA_ACTIVE_LOW
0732: 28 26         1430              JR Z,RXDAT3        ;KEY PRESS SO EXIT 
                    1431  #ELSE
                    1432              JR NZ,RXDAT3        ;KEY PRESS SO EXIT 
                    1433  #ENDIF    
                    1434    
0734: CB 7F         1435  	BIT	7,A
0736: 20 F5         1436  	JR	NZ,RXDAT1	;NO START BIT
                    1437  ;
                    1438  ; DETECTED START BIT
                    1439  ;
0738: 2A C0 0F      1440  	LD	HL,(BAUD)
073B: CB 3C         1441  	SRL	H
073D: CB 1D         1442  	RR	L 	;DELAY FOR HALF BIT TIME
073F: CD 5D 07      1443  	CALL 	BITIME
0742: DB 00         1444  	IN	A,(KEYBUF)
0744: CB 7F         1445  	BIT	7,A
0746: 20 E5         1446  	JR	NZ,RXDAT1	;START BIT NOT VALID
                    1447  ;
                    1448  ; DETECTED VALID START BIT,READ IN DATA
                    1449  ;
0748: 06 08         1450  	LD	B,08H
074A: 2A C0 0F      1451  RXDAT2	LD	HL,(BAUD)
074D: CD 5D 07      1452  	CALL	BITIME	;DELAY ONE BIT TIME
0750: DB 00         1453  	IN	A,(KEYBUF)
0752: CB 17         1454  	RL	A
0754: CB 19         1455  	RR	C	;SHIFT BIT INTO DATA REG
0756: 10 F2         1456  	DJNZ	RXDAT2
0758: 79            1457  	LD	A,C
0759: B7            1458  	OR	A	;CLEAR CARRY FLAG
075A: E1            1459  RXDAT3	POP	HL
075B: C1            1460  	POP	BC
075C: C9            1461  	RET
                    1462  ;---------------
                    1463  ; BIT TIME DELAY
                    1464  ;---------------
                    1465  ;DELAY FOR ONE SERIAL BIT TIME
                    1466  ;ENTRY : HL = DELAY TIME
                    1467  ; NO REGISTERS MODIFIED
                    1468  ;
075D: E5            1469  BITIME      PUSH HL
075E: D5            1470              PUSH DE
075F: 11 01 00      1471              LD DE,0001H
0762: ED 52         1472  BITIM1      SBC HL,DE
0764: D2 62 07      1473              JP NC,BITIM1
0767: D1            1474              POP DE
0768: E1            1475              POP HL
0769: C9            1476              RET
                    1477  ;-------------------------------
                    1478  ; SCAN DISPLAY UNTIL KEY RELEASE
                    1479  ;-------------------------------
076A: 22 D0 0F      1480  SDELAY      LD (DISBUF),HL      ;SHOW HL
076D: 06 FF         1481              LD B,255            ;IN DATA DISPLAYS
076F: CD D0 03      1482  SDELY1      CALL SCAND          ;UNTIL KEY
0772: 10 FB         1483              DJNZ SDELY1         ;IS RELEASED
0774: CD 16 04      1484              CALL SKEYRL
0777: C9            1485              RET
                    1486  ;-----------------------------------------
                    1487  ; FUNCTION 7 - TOGGLE HARDWARE SINGLE STEP
                    1488  ;-----------------------------------------
0778: CD 97 04      1489  TRACE       CALL BEEP
077B: D3 07         1490              OUT (IO7),A         ;TOGGLE HARDWARE SINGLE STEP LATCH
                    1491  #IFDEF TEC-1       
077D: 21 46 00      1492              LD HL,0046H         ;SHOW T
                    1493  #ELSE
                    1494              LD	HL,0070H	    ;SHOW T
                    1495  #ENDIF
0780: CD 6A 07      1496              CALL SDELAY
0783: C3 0C 06      1497              JP CANCL1
                    1498  ;-----------------------------
                    1499  ; FUNCTION B - TOGGLE KEY BEEP
                    1500  ;-----------------------------
0786: CD 97 04      1501  SWBEEP      CALL BEEP
0789: 3A D8 0F      1502              LD A,(MODE)
078C: EE 40         1503              XOR 40H
078E: 32 D8 0F      1504              LD (MODE),A
0791: C3 0C 06      1505              JP CANCL1
                    1506  ;-------------------------------
                    1507  ; SEPARATE BYTE INTO TWO NYBBLES
                    1508  ;-------------------------------
                    1509  ;SEPARATES A BYTE INTO TWO
                    1510  ;RIGHT JUSTIFIED NYBBLES
                    1511  ; ENTRY : A = BYTE TO BE SEPARATED
                    1512  ; EXIT  : H = MSN
                    1513  ;         L = LSN
                    1514  ;
0794: F5            1515  SPLIT       PUSH AF
0795: C5            1516              PUSH BC
0796: 47            1517              LD B,A              ;SAVE BYTE
0797: E6 0F         1518              AND 0FH             ;STRIP BITS LSN
0799: 6F            1519              LD L,A              ;RETURN LSN IN L
079A: 78            1520              LD A,B
079B: CB 3F         1521              SRL A
079D: CB 3F         1522              SRL A
079F: CB 3F         1523              SRL A               ;MOVE MSN
07A1: CB 3F         1524              SRL A               ;INTO LSN
07A3: 67            1525              LD H,A              ;RETURN MSN IN H
07A4: C1            1526              POP BC
07A5: F1            1527              POP AF
07A6: C9            1528              RET
                    1529  ;-----------------
                    1530  ; ONE SECOND DELAY
                    1531  ;-----------------
                    1532  ; MUST BE AT 4MHZ I GUESS
                    1533  ; ENTRY : NONE
                    1534  ; EXIT : FLAG REGISTER MODIFIED
                    1535  ;
07A7: C5            1536  DELONE      PUSH BC
07A8: D5            1537              PUSH DE
07A9: E5            1538              PUSH HL
07AA: 11 01 00      1539              LD DE,0001H
07AD: 21 70 08      1540              LD HL,0870H
07B0: 06 92         1541  DELON1      LD B,92H
07B2: 10 FE         1542  DELON2      DJNZ DELON2         ;INNER LOOP
07B4: ED 52         1543              SBC HL,DE
07B6: D2 B0 07      1544              JP NC,DELON1        ;OUTER LOOP
07B9: E1            1545              POP HL
07BA: D1            1546              POP DE
07BB: C1            1547              POP BC
07BC: C9            1548              RET
                    1549              END
 
